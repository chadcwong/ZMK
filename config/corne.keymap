/*
 * Copyright (c) 2020 The ZMK Contributor
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT  |
//                    | GUI | LWR | SPC |   | SPC | RSE  | ENTER |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P  &kp ESC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp SLASH &kp RSHFT
                  &kp LGUI &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp KP_ENTER
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  F1 |  F2  |  F3  | F4 | F5 | F6 |   |  +  | - |  NUM LOCK  |  1  |  2 | 3 |
// | F7| F8 | F9 | F10 | F11 | F12|                    | * | / | . | 4 | 5 |  6 |
// | SHFT | INST | CTRL|  ALT | DLT  |     |           | ! | END  | 0 |7 | 8 | 9 |
//                    | GUI |     | SPC |       | BCK |  layer   | ALT |
                        bindings = <
   &kp F1    &kp F2  &kp F3  &kp F4   &kp F5   &kp F6         &kp PLUS   &kp MINUS   &kp LNLCK &kp N1  &kp N2 &kp N3
   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12                 &kp ASTRK &kp KP_SLASH &kp KP_DOT &kp N4 &kp N5 &kp N6
   &kp LSHFT  &kp INS &kp LCTRL &kp LALT  &kp DEL  &trans       &kp EXCL &kp END &kp N0 &kp N7 &kp N8 &kp N9
                    &kp LGUI     &trans       &kp SPACE      &kp BSPC  &mo 3   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~ |    |  =  |  UP |  _  |  "|"  |                |  ^  |  @  |  (  |  )  |  &  | BKSP |
// |     |     |  LEFT |  DOWN   | RIGHT |  FIND  |         |  %  |  $  |  [  |  ]  |  \  |     |
// | SHFT |     |  *   |   CUT |  COPY | PASTE |             |  !  |  #  |  {  |  }  |  |  RSHIFT   |
//                    | GUI | 3rd layer | ENT |                          BACK |    | ENTER |
                        bindings = <
   &kp  GRAVE  &trans &kp EQUAL &kp UP &kp UNDER &kp PIPE2         &kp CARET &kp AT  &kp LPAR &kp RPAR &kp AMPS &kp BSPC
  &trans  &trans &kp LEFT  &kp DOWN &kp RIGHT &kp K_FIND               &kp PRCNT &kp DLLR &kp LBKT  &kp RBKT &kp BSLH &trans
  &kp LSHFT  &trans &kp ASTRK  &kp K_CUT  &kp K_COPY   &kp K_PASTE            &kp EXCL &kp POUND  &kp LBRC  &kp RBRC &trans &kp RSHFT
                    	     &kp LGUI &mo 3   &kp KP_ENTER                     &kp BSPC   &trans    &kp KP_ENTER
                        >;
                };
                
                 triple_layer {
// -----------------------------------------------------------------------------------------
// |  RGB_EFF |     |     |     | Backlight  | RGB  |                     |  HOME   | END    |     | DEC BRIGHT  |  INC Bright |    | 
// | RGB_TOG |     |     |     |     |     |   |     |                  |  Page DOwn  |   Page Up    |       |   VOL_Down  |  VOL_UP  |      |
// | EP_OFF | EP_ON  |  EP_TOG |     |     |     |   |                     |      |     |     |     | CAPS |
//                                           | GUI | LWR | SPC |   | SPC | RSE  | ENTER |
                        bindings = <
   &rgb_ug RGB_EFF &trans &trans &trans &bl BL_TOG &rgb_ug RGB_COLOR_HSB(157,100,86)             &kp HOME &kp END &trans  &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &trans
   &rgb_ug RGB_TOG &trans &trans &trans &trans &trans                                   &kp PG_UP &kp PG_DN &trans &kp C_VOL_DN &kp C_VOL_UP &trans 
   &ext_power EP_OFF &ext_power EP_ON &ext_power EP_TOG &trans &trans &bt BT_CLR            &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans &trans &kp CAPS
                                                  &kp LGUI &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp KP_ENTER
                        >;
                };
        };
};
